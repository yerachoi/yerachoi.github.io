{"version":3,"sources":["webpack:///./src/templates/tag-template.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_Sidebar__WEBPACK_IMPORTED_MODULE_2__","_components_Feed__WEBPACK_IMPORTED_MODULE_3__","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_components_Pagination__WEBPACK_IMPORTED_MODULE_5__","_hooks__WEBPACK_IMPORTED_MODULE_6__","TagTemplate","_ref","data","pageContext","tag","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","language","siteTitle","useSiteMetadata","title","titleKo","siteSubtitle","subtitle","subtitleKo","edges","allMarkdownRemark","pageTitle","a","createElement","description"],"mappings":"2FACAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KA0DaI,EAAK,aA8CHU,UAzFK,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,YAEzBC,EAOED,EAPFC,IACAC,EAMEF,EANFE,YACAC,EAKEH,EALFG,aACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,YACAC,EAEEN,EAFFM,YACAC,EACEP,EADFO,SAEIC,EACS,OAAbD,EAAoBE,cAAkBC,MAAQD,cAAkBE,QAC5DC,EACS,OAAbL,EACIE,cAAkBI,SAClBJ,cAAkBK,WAEhBC,EAAUhB,EAAKiB,kBAAfD,MACFE,EACJf,EAAc,EACG,OAAbK,EAAA,wBAC0BN,EAD1B,WACwCC,EADxC,MACyDM,EADzD,IAEMP,EAFN,yBAEkCC,EAFlC,MAEmDM,EACtC,OAAbD,EAAA,wBACwBN,EADxB,OACkCO,EADlC,IAEIP,EAFJ,qBAE4BO,EAElC,OACEnB,EAAA6B,EAAAC,cAAC5B,EAAA,EAAD,CAAQmB,MAAOO,EAAWG,YAAaR,GACrCvB,EAAA6B,EAAAC,cAAC3B,EAAA,EAAD,MACAH,EAAA6B,EAAAC,cAACzB,EAAA,EAAD,CAAMgB,MAAOT,GACXZ,EAAA6B,EAAAC,cAAC1B,EAAA,EAAD,CAAMsB,MAAOA,IACb1B,EAAA6B,EAAAC,cAACxB,EAAA,EAAD,CACEQ,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,YAAaA","file":"component---src-templates-tag-template-js-12a3667b4f225aea3836.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\nimport type { AllMarkdownRemark, PageContext } from '../types';\n\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext\n};\n\nconst TagTemplate = ({ data, pageContext }: Props) => {\n  const {\n    tag,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n    language\n  } = pageContext;\n  const siteTitle =\n    language === 'en' ? useSiteMetadata().title : useSiteMetadata().titleKo;\n  const siteSubtitle =\n    language === 'en'\n      ? useSiteMetadata().subtitle\n      : useSiteMetadata().subtitleKo;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0\n      ? language === 'en'\n        ? `All Posts tagged as \"${tag}\" - Page${currentPage} - ${siteTitle}`\n        : `\"${tag}\" 태그가 있는 모든 포스트 - Page${currentPage} - ${siteTitle}`\n      : language === 'en'\n      ? `All Posts tagged as \"${tag}\" - ${siteTitle}`\n      : `\"${tag}\" 태그가 있는 모든 포스트 - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar />\n      <Page title={tag}>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TagPage(\n    $tag: String\n    $postsLimit: Int!\n    $postsOffset: Int!\n    $language: String!\n  ) {\n    site {\n      siteMetadata {\n        title\n        titleKo\n        subtitle\n        subtitleKo\n      }\n    }\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: {\n        frontmatter: {\n          tags: { in: [$tag] }\n          template: { eq: \"post\" }\n          draft: { ne: true }\n          language: { eq: $language }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagTemplate;\n"],"sourceRoot":""}